# SmartHire - Architektura techniczna

## Główne komponenty techniczne:

### Warstwa danych:
- Obiekty niestandardowe Salesforce do przechowywania danych
- Relacje między obiektami
- Platform Events do obsługi asynchronicznych operacji

### Warstwa logiki biznesowej:
- Klasy Apex do przetwarzania danych
- Triggery do automatyzacji procesów
- Queueable Apex do operacji asynchronicznych
- Integracja z API zewnętrznych serwisów

### Warstwa interfejsu użytkownika:
- Lightning Web Components (LWC) do tworzenia interfejsu
- Lightning App Builder do konfiguracji stron
- SLDS (Salesforce Lightning Design System) do stylizacji

### Warstwa integracyjna:
- Named Credentials do zarządzania integracjami
- Callout Apex do wywoływania zewnętrznych API
- JSON/XML parsery do przetwarzania odpowiedzi

## Kluczowe klasy Apex:

- **CVAnalysisController** - kontroler do analizy CV
- **CVAnalysisService** - serwis do analizy CV
- **OpenAIService** - integracja z OpenAI
- **JobApplicationService** - obsługa aplikacji
- **CandidateService** - zarządzanie kandydatami
- **PositionService** - zarządzanie stanowiskami
- **SecurityUtils** - narzędzia bezpieczeństwa
- **Logger** - logowanie błędów i zdarzeń

## Kluczowe komponenty LWC:

- **aiAnalysisViewer** - wyświetlanie wyników analizy AI
- **cvAnalyzer** - komponent do analizy CV
- **candidateViewer** - wyświetlanie danych kandydata
- **jobApplicationManager** - zarządzanie aplikacjami

## Przepływ przetwarzania CV:

1. Upload CV (PDF/DOCX) przez rekrutera
2. Ekstrakcja tekstu z pliku
3. Wywołanie OpenAI API z tekstem CV
4. Przetworzenie odpowiedzi AI
5. Zapisanie wyników do bazy danych
6. Aktualizacja statusu aplikacji
7. Wyświetlenie wyników analizy rekruterowi

## Struktury danych:

### Obiekty niestandardowe:

- **Job_Application__c**
  - Name (auto-number)
  - Candidate__c (lookup)
  - Position__c (lookup)
  - Status__c (picklist)
  - Analysis_Results__c (long text)
  - Analysis_Score__c (number)

- **Position__c**
  - Name (text)
  - Description__c (text)
  - Required_Skills__c (text)
  - Status__c (picklist)
  - Hiring_Manager__c (lookup)

- **Candidate__c**
  - Name (text)
  - Email__c (email)
  - Phone__c (phone)
  - Skills__c (text)
  - Experience__c (number)
  - Education__c (text)
  - Contact__c (lookup to Contact)
  - Analysis_Results__c (long text area)
  - Last_Analysis_Date__c (datetime)

## Mechanizmy bezpieczeństwa:

- SecurityUtils do walidacji dostępu do rekordów
- Sanityzacja danych wejściowych
- Ochrona przed SOQL Injection
- Zarządzanie uprawnieniami użytkowników

## Integracje:

### OpenAI API:
- Named Credential: AI_CV_Analysis_API
- Endpoint: https://api.openai.com/v1/chat/completions
- Metoda: POST
- Format danych: JSON
- Autoryzacja: Bearer Token

### PDF Extractor:
- Named Credential: PDFExtractorService
- Endpoint: https://pdf-extractor.example.com/extract
- Metoda: POST
- Format danych: Multipart Form
- Autoryzacja: API Key

## Obsługa błędów:

- Obsługa wyjątków w każdej klasie
- Logowanie błędów do obiektu Error_Log__c
- Komunikaty błędów dla użytkowników
- Mechanizm retry dla integracji

## Skalowanie i wydajność:

- Asynchroniczne przetwarzanie danych za pomocą Queueable Apex
- Bulkifikacja triggerów i klas Apex
- Cachowanie odpowiedzi API
- Paginacja dla dużych zbiorów danych

## Monitoring i analityka:

- Logowanie operacji w Logger
- Śledzenie statusów aplikacji
- Raportowanie na temat procesu rekrutacji
- Dashboardy wydajności rekrutacji

## Środowiska:

- Deweloperskie (sandbox)
- Testowe (partial sandbox)
- Przedprodukcyjne (full sandbox)
- Produkcyjne (production org)

## Strategie deploymentu:

- CI/CD z wykorzystaniem SFDX
- Automatyczne testy jednostkowe
- Kontrola kodu z GitHub
- Zarządzanie pakietami i zależnościami 