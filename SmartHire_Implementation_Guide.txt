# SmartHire - Przewodnik implementacji

## 1. Przygotowanie środowiska

**Wymagania**:
- Organizacja Salesforce (Enterprise, Unlimited lub Developer Edition)
- Uprawnienia administratora
- Git
- Salesforce CLI (SFDX)
- Visual Studio Code z rozszerzeniem Salesforce Extension Pack

**Kroki**:
1. Skonfiguruj środowisko deweloperskie
2. Sklonuj repozytorium SmartHire z GitHuba
3. Autoryzuj połączenie z organizacją Salesforce
4. Zainstaluj wymagane pakiety zależne

## 2. Wdrożenie obiekty niestandardowych

**Wymagane obiekty**:
- Job_Application__c
- Position__c
- Candidate__c
- Error_Log__c
- SmartHire_Setting__mdt

**Kroki**:
1. Wdróż metadane obiektów używając polecenia:
   ```
   sfdx force:source:deploy -p force-app/main/default/objects
   ```
2. Sprawdź czy obiekty zostały utworzone poprawnie w organizacji
3. Skonfiguruj układ strony dla każdego obiektu
4. Ustaw uprawnienia dostępu dla profili użytkowników

## 3. Wdrożenie klas Apex

**Wymagane klasy**:
- Kontrolery: PositionController, CandidateController, ApplicationController, CVAnalysisController
- Serwisy: PositionService, CandidateService, JobApplicationService, CVAnalysisService, OpenAIService
- Pomocnicze: SecurityUtils, Logger, CVAnalysisHelper, CVAnalysisFactory
- Testy: Wszystkie odpowiednie klasy testowe

**Kroki**:
1. Wdróż klasy używając polecenia:
   ```
   sfdx force:source:deploy -p force-app/main/default/classes
   ```
2. Uruchom testy jednostkowe aby upewnić się że wszystkie klasy działają poprawnie:
   ```
   sfdx force:apex:test:run --synchronous --classnames "SecurityUtilsTest,OpenAIServiceTest,CVAnalysisServiceTest"
   ```

## 4. Wdrożenie komponentów Lightning Web Components

**Wymagane komponenty**:
- cvAnalyzer
- aiAnalysisViewer
- messageBanner
- parentComponent

**Kroki**:
1. Wdróż komponenty używając polecenia:
   ```
   sfdx force:source:deploy -p force-app/main/default/lwc
   ```
2. Skonfiguruj strony Lightning aby używały tych komponentów
3. Przypisz strony Lightning do odpowiednich aplikacji

## 5. Konfiguracja integracji z OpenAI

**Wymagane metadane**:
- Named Credential dla OpenAI
- Custom Settings dla przechowywania kluczy API
- Remote Site Setting dla API OpenAI

**Kroki**:
1. Wdróż metadane używając polecenia:
   ```
   sfdx force:source:deploy -p force-app/main/default/namedCredentials force-app/main/default/remoteSiteSettings
   ```
2. Uzyskaj klucz API od OpenAI
3. Dodaj klucz API do właściwych obiektów Custom Settings

## 6. Tworzenie diagramu ERD

**Wymagane narzędzia**:
- Lucidchart lub inne narzędzie do tworzenia diagramów ERD

**Kroki implementacji**:
1. Utwórz nowy diagram ERD
2. Dodaj tabele dla każdego obiektu:
   - Job_Application__c
   - Position__c
   - Candidate__c
   - SmartHire_Setting__mdt
   - User
   - Contact
3. Dla każdej tabeli dodaj pola z typami danych
4. Oznacz klucze główne (PK) i obce (FK)
5. Dodaj relacje między tabelami używając odpowiednich symboli (1:n, n:n)
6. Użyj kolorów do rozróżnienia typów obiektów:
   - Pomarańczowy: obiekty niestandardowe
   - Niebieski: obiekty standardowe
   - Zielony: metadane

## 7. Tworzenie przepływu procesów

**Wymagane narzędzia**:
- Lucidchart lub inne narzędzie do tworzenia diagramów procesów

**Kroki**:
1. Utwórz nowy diagram przepływu procesów
2. Dodaj następujące etapy:
   - Dodanie nowego stanowiska
   - Dodanie nowego kandydata
   - Utworzenie aplikacji
   - Analiza CV
   - Ocena aplikacji
   - Podjęcie decyzji
3. Połącz etapy strzałkami w odpowiedniej kolejności
4. Dodaj rozgałęzienia dla alternatywnych ścieżek
5. Opisz każdy etap i warunki przejścia między nimi

## 8. Testowanie aplikacji

**Testy funkcjonalne**:
1. Dodaj nowe stanowisko
2. Dodaj nowego kandydata
3. Utwórz nową aplikację
4. Dodaj CV kandydata
5. Uruchom analizę CV
6. Sprawdź wyniki analizy
7. Aktualizuj status aplikacji

**Testy integracyjne**:
1. Sprawdź integrację z OpenAI
2. Sprawdź przetwarzanie plików PDF i DOCX
3. Sprawdź konwersję kandydatów na kontakty

**Testy wydajnościowe**:
1. Testuj aplikację z dużą liczbą rekordów
2. Sprawdź czasy odpowiedzi dla różnych operacji
3. Monitoruj limity Apex i SOQL

## 9. Szkolenie użytkowników

**Materiały szkoleniowe**:
1. Przewodnik użytkownika
2. Filmy instruktażowe
3. Dokumentacja API

**Sesje szkoleniowe**:
1. Szkolenie dla rekruterów
2. Szkolenie dla menedżerów HR
3. Szkolenie dla administratorów

## 10. Pomoc techniczna i konserwacja

**Procesy pomocy technicznej**:
1. Procedura zgłaszania błędów
2. System monitorowania błędów
3. Aktualizacje i patche

**Plany konserwacji**:
1. Regularne aktualizacje metadanych
2. Optymalizacja kodu
3. Monitorowanie wydajności

## 11. Dokumentacja dodatkowa

**Podręczniki**:
1. Podręcznik użytkownika
2. Podręcznik administratora
3. Podręcznik dewelopera 