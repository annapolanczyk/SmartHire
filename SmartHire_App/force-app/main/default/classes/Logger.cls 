/**
 * Klasa do logowania błędów i zdarzeń w aplikacji
 * @author SmartHire Team
 * @date 2025-03-03
 */
public with sharing class Logger {
    /**
     * Loguje błąd do debugów systemowych
     * @param className Nazwa klasy, z której pochodzi błąd
     * @param methodName Nazwa metody, z której pochodzi błąd
     * @param message Komunikat błędu
     * @param e Opcjonalny wyjątek powiązany z błędem
     */
    public static void error(String className, String methodName, String message, Exception e) {
        System.debug(LoggingLevel.ERROR, className + '.' + methodName + ': ' + message);
        if (e != null) {
            System.debug(LoggingLevel.ERROR, 'Wyjątek: ' + e.getMessage() + '\n' + e.getStackTraceString());
        }
        
        // Implementacja logowania do obiektu niestandardowego zostanie dodana w przyszłych wersjach
    }
    
    /**
     * Loguje informację do debugów systemowych
     * @param className Nazwa klasy
     * @param methodName Nazwa metody
     * @param message Komunikat informacyjny
     */
    public static void info(String className, String methodName, String message) {
        System.debug(LoggingLevel.INFO, className + '.' + methodName + ': ' + message);
        
        // Implementacja logowania do obiektu niestandardowego zostanie dodana w przyszłych wersjach
    }
}